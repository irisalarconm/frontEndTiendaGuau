
@using FrontEndTiendaGuau.Services;
@using ModelsDTO;


@page "/Product/index";
@inject ProductService productService;


<h3>P R O D U C T S</h3>

<a href="/Product/Create" class="btn btn-create">Create New Product</a>

<table class="tb">
  
   <thead>
        <tr>
            <th>Id</th>
            <th>Client</th>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Actions</th>
        </tr>
    </thead>
        @if(IsLoaded){
        @foreach(var element in products)
        {

            <tr>
                <td>@element.ProductId</td>
                <td>@element.ClientId</td>
                <td>@element.NameProduct</td>
                <td>@element.Description</td>
                <td>@element.Price</td>
                <td>
                    <a href="/Product/Edit/@element.ProductId" class="btn btn-edit" type="button"> <span class="oi oi-pencil" aria-hidden="true"></span></a>
                    <a href="/Product/Details/@element.ProductId" class="btn btn-details" type="button"> <span class="oi oi-spreadsheet" aria-hidden="true"></span></a>
                    <a href="/Product/Delete/@element.ProductId" class="btn btn-delete" type="button"> <span class="oi oi-trash" aria-hidden="true"></span></a>
                </td>
            </tr>
        }
    }
</table>
<FooterNav/>
@code {
    bool IsLoaded = false;

    private IEnumerable<ProductDTO> products;

    protected override async Task OnInitializedAsync()
    {
        products = await productService.GetProduct();

        IsLoaded = true;
    }

}
